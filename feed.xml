<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" xml:lang="en"><generator uri="https://jekyllrb.com/" version="4.2.2">Jekyll</generator><link href="https://jiaweizzhao.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://jiaweizzhao.github.io/" rel="alternate" type="text/html" hreflang="en" /><updated>2022-03-08T22:22:56+00:00</updated><id>https://jiaweizzhao.github.io/feed.xml</id><title type="html">Jiawei Zhao</title><subtitle>A simple, whitespace theme for academics. Based on [*folio](https://github.com/bogoli/-folio) design.
</subtitle><entry><title type="html">Optimization in Deep Learning</title><link href="https://jiaweizzhao.github.io/blog/2022/optimization/" rel="alternate" type="text/html" title="Optimization in Deep Learning" /><published>2022-02-24T21:01:00+00:00</published><updated>2022-02-24T21:01:00+00:00</updated><id>https://jiaweizzhao.github.io/blog/2022/optimization</id><content type="html" xml:base="https://jiaweizzhao.github.io/blog/2022/optimization/"><![CDATA[<p>Optimization is an essential concept in deep learning as the learning algorithms primarily affect the quality of the learned networks. This page introduces our group’s recent works on optimization, which are categorized by their topics.</p>

<!-- In addition, we study the optimization problems under different scenarios, such as multi-agent optimization and policy optimization. -->

<h1 id="learning-algorithms-for-deep-learning">Learning Algorithms for Deep Learning</h1>
<p>Due to the non-convex property of the optimization problem in deep learning, it is important to understand its loss landscape while proposing new learning algorithms tailored to deep neural networks. We proposed several useful learning algorithms, including Madam and signSGD optimizers.</p>

<h3 id="madam-optimizer---multiplicative-weight-update-for-deep-learning-link">Madam Optimizer - Multiplicative Weight Update for Deep Learning <a href="https://arxiv.org/abs/2006.14560">(link)</a></h3>

<p>We propose a multiplicative weight update method Madam - a multiplicative version of the Adam optimizer. We prove that multiplicative weight updates satisfy a descent lemma tailored to compositional functions. Our empirical results show that Madam can train state-of-the-art neural network architectures without learning rate tuning.</p>

<h3 id="signsgd-optimizer-sign-based-stochastic-gradient-descent-link">signSGD Optimizer: Sign-based Stochastic Gradient Descent <a href="https://arxiv.org/abs/1802.04434">(link)</a></h3>

<p>We propose signSGD that updates the weights only using the sign of each minibatch stochastic gradient. Through theoretical analysis, we prove that signSGD matches the SGD-level convergence rate. On the practical side, we find that the momentum counterpart of signSGD is able to match the accuracy and convergence speed of Adam on deep Imagenet models.</p>

<h1 id="resource-constraint-optimization">Resource Constraint Optimization</h1>
<p>Learning becomes computationally expensive with the increase of network sizes. This highlights the importance of resource constraint optimization, which aims to reduce resource consumption during training while preserving the quality of the solutions. We deigned effective learning algorithms for specific computational scenarios, such as distributed training and low-precision training.</p>
<h3 id="lns-madam-low-precision-training-in-logarithmic-number-system-using-multiplicative-weight-update-link">LNS-Madam: Low-Precision Training in Logarithmic Number System using Multiplicative Weight Update <a href="https://arxiv.org/abs/2106.13914">(link)</a></h3>

<div class="col-sm mt-3 mt-md-0 mx-auto" style="max-width: 400px;">
    <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/add_vs_mul-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/add_vs_mul-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/add_vs_mul-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid" src="/assets/img/add_vs_mul.jpg" />
  </picture>

</figure>

</div>

<p>We develop a co-designed low-precision training framework LNS-Madam, in which we jointly design the logarithmic number system (LNS) and the multiplicative weight update algorithm Madam. We prove that Madam induces less quantization error as it directly updates the weights in a logarithmic representation. Thus, training with Madam leads to a stable convergence even if precision is strongly limited.</p>

<h3 id="signsgd-with-majority-vote-distributed-learning-using-signsgd-algorithm-link">signSGD with Majority Vote: Distributed Learning using signSGD Algorithm <a href="https://arxiv.org/abs/1810.05291">(link)</a></h3>

<div class="col-sm mt-3 mt-md-0 mx-auto" style="max-width: 450px;">
    <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/breakdown-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/breakdown-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/breakdown-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid" src="/assets/img/breakdown.jpg" />
  </picture>

</figure>

</div>

<p>We propose signSGD with majority vote - a robust, communication-efficient learning algorithm for distributed learning. Workers transmit only the sign of their gradient vector to a server, and the overall update is decided by a majority vote. This algorithm uses 32× less communication per iteration than full-precision, distributed SGD. Benchmarking against the state-of-the-art collective communications library (NCCL), our framework leads to a 25% reduction in time for training resnet50 on Imagenet when using 15 AWS p3.2xlarge machines.</p>

<h1 id="multi-agent-optimization">Multi-Agent Optimization</h1>

<h3 id="cgd-optimizer-competitive-gradient-descent-link">CGD Optimizer: Competitive Gradient Descent <a href="https://arxiv.org/abs/1905.12103">(link)</a></h3>

<p>To be filled.</p>

<h3 id="competitive-gradient-descent-for-gan-training-link">Competitive Gradient Descent for GAN Training <a href="https://arxiv.org/abs/1910.05852">(link)</a></h3>

<p>To be filled.</p>

<h3 id="polymatrix-competitive-gradient-descent-link">Polymatrix Competitive Gradient Descent <a href="https://arxiv.org/abs/2111.08565">(link)</a></h3>

<p>To be filled.</p>

<h1 id="policy-optimization">Policy Optimization</h1>

<p>To be filled.</p>

<h3 id="competitive-policy-optimization-link">Competitive Policy Optimization <a href="https://arxiv.org/abs/2006.10611">(link)</a></h3>

<p>To be filled.</p>

<h3 id="deep-bayesian-quadrature-policy-optimization-link">Deep Bayesian Quadrature Policy Optimization <a href="https://arxiv.org/abs/2006.15637">(link)</a></h3>

<p>To be filled.</p>

<h3 id="trust-region-policy-optimization-of-pomdps-link">Trust Region Policy Optimization of POMDPs <a href="https://authors.library.caltech.edu/94179/1/1810.07900.pdf">(link)</a></h3>

<p>To be filled.</p>

<h1 id="landscape-analysis">Landscape Analysis</h1>

<p>To be filled.</p>

<h3 id="efficient-approaches-for-escaping-higher-order-saddle-points-in-non-convex-optimization-link">Efficient approaches for escaping higher order saddle points in non-convex optimization <a href="http://arxiv.org/abs/1602.05908">(link)</a></h3>

<p>To be filled.
<!-- ###  [(link)]() --></p>]]></content><author><name></name></author><category term="projects" /><summary type="html"><![CDATA[none]]></summary></entry><entry><title type="html">Low-Precision Training with Multiplicative Weight Update Algorithm Madam</title><link href="https://jiaweizzhao.github.io/blog/2022/low-precision-training/" rel="alternate" type="text/html" title="Low-Precision Training with Multiplicative Weight Update Algorithm Madam" /><published>2022-01-10T21:01:00+00:00</published><updated>2022-01-10T21:01:00+00:00</updated><id>https://jiaweizzhao.github.io/blog/2022/low-precision-training</id><content type="html" xml:base="https://jiaweizzhao.github.io/blog/2022/low-precision-training/"><![CDATA[<!-- ### Abstract -->

<!-- Representing deep neural networks (DNNs) in low-precision is a promising approach to enable efficient acceleration and memory reduction. However, directly training DNNs with low-precision weights leads to accuracy degradation due to complex interactions between the low-precision number systems and the learning algorithms. To address this issue, we develop a co-designed low-precision training framework, termed LNS-Madam, in which we jointly design a logarithmic number system (LNS) and a multiplicative weight update algorithm (Madam). Compared to a full-precision floating-point implementation, 8-bit LNS-Madam reduces the energy consumption by over 90% while preserving the prediction performance. -->

<!-- ### Background -->

<p>Training deep neural networks consumes extensive energy and generates a large amount of carbon emissions. For example, suggested by <a href="https://www.techtarget.com/searchenterpriseai/feature/Energy-consumption-of-AI-poses-environmental-problems">this article</a>, training a final version of MegatronLM costs 27,648 kilowatt hours (kWh), which is similar to the energy consumption of three households in the U.S. for a year. Traditionally, values in neural networks are represented using floating-point (32-bit) numbers, which incurs large arithmetic and memory footprint, and hence significant energy consumption. In contrast, low-precision numbers only require low-bitwidth computational units, leading to better computational efficiency and less required memory bandwidth and capacity. To achieve low-precision training, we develop a co-designed low-precision training framework, termed LNS-Madam, in which we jointly design a logarithmic number system (LNS) and a multiplicative weight update algorithm (Madam).</p>

<h3 id="list-of-papers">List of Papers</h3>

<p><strong>Learning compositional functions via multiplicative weight updates <a href="https://arxiv.org/abs/2006.14560">(link)</a></strong>
<!-- Jeremy Bernstein, Jiawei Zhao, Markus Meister, Ming-Yu Liu, Anima Anandkumar, Yisong Yue --></p>

<p><strong>LNS-Madam: Low-Precision Training in Logarithmic Number System using Multiplicative Weight Update <a href="https://arxiv.org/abs/2106.13914">(link)</a></strong>
<!-- Jiawei Zhao, Steve Dai, Rangharajan Venkatesan, Ming-Yu Liu, Brucek Khailany, Bill Dally, Anima Anandkumar --></p>

<h3 id="madam-optimizer---multiplicative-weight-update-for-deep-learning">Madam Optimizer - Multiplicative Weight Update for Deep Learning</h3>

<p>Learning compositional functions via gradient descent incurs well known problems like vanishing and exploding gradients, making careful learning rate tuning essential for real-world applications. In contrast to additive learning algorithms such as gradient descent, we propose a multiplicative weight update method Madam - a multiplicative version of the Adam optimizer. Madam updates the weights directly in logarithmic space, such that:</p>

\[W \gets W \odot \exp \left[-\eta\,\mathrm{sign} W \odot\, \left(\frac{g}{\bar{g}}\right)\right]\]

<p>where \(\odot\) denotes element-wise multiplication, \(\eta\) is the learning rate, and \(\bar{g}\) represent the normalized gradient.</p>

<div class="col-sm mt-3 mt-md-0 mx-auto">
    <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/lr-compare-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/lr-compare-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/lr-compare-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid" src="/assets/img/lr-compare.jpg" />
  </picture>

</figure>

</div>

<p>We prove that multiplicative weight updates satisfy a descent lemma tailored to compositional functions. As shown above, our empirical results suggest that Madam can train state-of-the-art neural network architectures without learning rate tuning.</p>

<h3 id="representing-neural-networks-in-logarithmic-number-system">Representing Neural Networks in Logarithmic Number System</h3>

<div class="col-sm mt-3 mt-md-0 mx-auto">
    <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/lns_synaptic-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/lns_synaptic-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/lns_synaptic-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid" src="/assets/img/lns_synaptic.png" />
  </picture>

</figure>

</div>

<p>While low-precision training methods generally reduce computational costs, energy efficiency can be further improved by choosing a logarithmic number system (LNS) for representing numbers. As shown in the above figure (left)， we compare bfloat16 number system (upper) with a logarithmic number system (lower), where LNS only has sign and exponents. Representing neural networks using LNS is in line with biological findings, suggested by <a href="https://elifesciences.org/articles/10778">Bartol et al.</a>, that the brain may use ``a form of non-uniform quantization which efficiently encodes the dynamic range of synaptic strengths at constant precision’’—or in other words, a logarithmic number system. The above figure (right) is the synaptic distribution suggested by <a href="https://elifesciences.org/articles/10778">Bartol et al.</a>.</p>

<p>In addition, LNS is energy efficient. It achieves a higher computational efficiency by transforming expensive multiplication operations in the network layers to inexpensive additions in their logarithmic representations.</p>

<h3 id="lns-madam">LNS-Madam</h3>

<div class="col-sm mt-3 mt-md-0 mx-auto" style="max-width: 400px;">
    <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/add_vs_mul-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/add_vs_mul-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/add_vs_mul-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid" src="/assets/img/add_vs_mul.jpg" />
  </picture>

</figure>

</div>

<p>Because Madam optimizer directly updates the weights in the logarithmic space, it is natural to apply Madam over the weights in LNS. As shown above, Madam induces less quantization error compared to gradient descent, as Madam’s updates are scaled with the weight magnitudes accordingly. Motivated by this benefit, we develop a co-designed low-precision training framework LNS-Madam, in which we jointly design the logarithmic number system (LNS) and the multiplicative weight update algorithm Madam.</p>

<h3 id="results">Results</h3>

<div class="col-sm mt-3 mt-md-0 mx-auto">
    <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/LNS-Madam-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/LNS-Madam-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/LNS-Madam-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid" src="/assets/img/LNS-Madam.jpg" />
  </picture>

</figure>

</div>

<p>We compare Madam with different optimizers over various datasets and models. As shown above, training with Madam leads to a stable convergence even if precision is strongly limited.</p>

<div class="col-sm mt-3 mt-md-0 mx-auto" style="max-width: 400px;">
    <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/energy_results-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/energy_results-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/energy_results-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid" src="/assets/img/energy_results.jpg" />
  </picture>

</figure>

</div>

<p>8-bit LNS-Madam also shows great energy efficiency. Compared to a full-precision floating-point implementation, 8-bit LNS-Madam reduces the energy consumption by over 90% while preserving the prediction performance.</p>]]></content><author><name></name></author><category term="projects" /><summary type="html"><![CDATA[none]]></summary></entry><entry><title type="html">a post with diagrams</title><link href="https://jiaweizzhao.github.io/blog/2021/diagrams/" rel="alternate" type="text/html" title="a post with diagrams" /><published>2021-07-04T17:39:00+00:00</published><updated>2021-07-04T17:39:00+00:00</updated><id>https://jiaweizzhao.github.io/blog/2021/diagrams</id><content type="html" xml:base="https://jiaweizzhao.github.io/blog/2021/diagrams/"><![CDATA[<p>This theme supports generating various diagrams from a text description using <a href="https://github.com/zhustec/jekyll-diagrams" target="\_blank">jekyll-diagrams</a> plugin.
Below, we generate a few examples of such diagrams using languages such as <a href="https://mermaid-js.github.io/mermaid/" target="\_blank">mermaid</a>, <a href="https://plantuml.com/" target="\_blank">plantuml</a>, <a href="https://vega.github.io/vega-lite/" target="\_blank">vega-lite</a>, etc.</p>

<p><strong>Note:</strong> different diagram-generation packages require external dependencies to be installed on your machine.
Also, be mindful of that because of diagram generation the fist time you build your Jekyll website after adding new diagrams will be SLOW.
For any other details, please refer to <a href="https://github.com/zhustec/jekyll-diagrams" target="\_blank">jekyll-diagrams</a> README.</p>

<h2 id="mermaid">Mermaid</h2>

<p>Install mermaid using <code class="language-plaintext highlighter-rouge">node.js</code> package manager <code class="language-plaintext highlighter-rouge">npm</code> by running the following command:</p>
<div class="language-bash highlighter-rouge"><div class="highlight"><pre class="highlight"><code>npm <span class="nb">install</span> <span class="nt">-g</span> mermaid.cli
</code></pre></div></div>

<p>The diagram below was generated by the following code:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>{% mermaid %}
sequenceDiagram
    participant John
    participant Alice
    Alice-&gt;&gt;John: Hello John, how are you?
    John--&gt;&gt;Alice: Great!
{% endmermaid %}
</code></pre></div></div>

<div class="jekyll-diagrams diagrams mermaid">
  <svg id="mermaid-1646778197455" width="100%" xmlns="http://www.w3.org/2000/svg" height="100%" style="max-width:450px;" viewBox="-50 -10 450 231"><style>#mermaid-1646778197455 .label{font-family:trebuchet ms,verdana,arial;color:#333}#mermaid-1646778197455 .node circle,#mermaid-1646778197455 .node ellipse,#mermaid-1646778197455 .node polygon,#mermaid-1646778197455 .node rect{fill:#ececff;stroke:#9370db;stroke-width:1px}#mermaid-1646778197455 .node.clickable{cursor:pointer}#mermaid-1646778197455 .arrowheadPath{fill:#333}#mermaid-1646778197455 .edgePath .path{stroke:#333;stroke-width:1.5px}#mermaid-1646778197455 .edgeLabel{background-color:#e8e8e8}#mermaid-1646778197455 .cluster rect{fill:#ffffde!important;stroke:#aa3!important;stroke-width:1px!important}#mermaid-1646778197455 .cluster text{fill:#333}#mermaid-1646778197455 div.mermaidTooltip{position:absolute;text-align:center;max-width:200px;padding:2px;font-family:trebuchet ms,verdana,arial;font-size:12px;background:#ffffde;border:1px solid #aa3;border-radius:2px;pointer-events:none;z-index:100}#mermaid-1646778197455 .actor{stroke:#ccf;fill:#ececff}#mermaid-1646778197455 text.actor{fill:#000;stroke:none}#mermaid-1646778197455 .actor-line{stroke:grey}#mermaid-1646778197455 .messageLine0{marker-end:"url(#arrowhead)"}#mermaid-1646778197455 .messageLine0,#mermaid-1646778197455 .messageLine1{stroke-width:1.5;stroke-dasharray:"2 2";stroke:#333}#mermaid-1646778197455 #arrowhead{fill:#333}#mermaid-1646778197455 #crosshead path{fill:#333!important;stroke:#333!important}#mermaid-1646778197455 .messageText{fill:#333;stroke:none}#mermaid-1646778197455 .labelBox{stroke:#ccf;fill:#ececff}#mermaid-1646778197455 .labelText,#mermaid-1646778197455 .loopText{fill:#000;stroke:none}#mermaid-1646778197455 .loopLine{stroke-width:2;stroke-dasharray:"2 2";marker-end:"url(#arrowhead)";stroke:#ccf}#mermaid-1646778197455 .note{stroke:#aa3;fill:#fff5ad}#mermaid-1646778197455 .noteText{fill:#000;stroke:none;font-family:trebuchet ms,verdana,arial;font-size:14px}#mermaid-1646778197455 .section{stroke:none;opacity:.2}#mermaid-1646778197455 .section0{fill:rgba(102,102,255,.49)}#mermaid-1646778197455 .section2{fill:#fff400}#mermaid-1646778197455 .section1,#mermaid-1646778197455 .section3{fill:#fff;opacity:.2}#mermaid-1646778197455 .sectionTitle0,#mermaid-1646778197455 .sectionTitle1,#mermaid-1646778197455 .sectionTitle2,#mermaid-1646778197455 .sectionTitle3{fill:#333}#mermaid-1646778197455 .sectionTitle{text-anchor:start;font-size:11px;text-height:14px}#mermaid-1646778197455 .grid .tick{stroke:#d3d3d3;opacity:.3;shape-rendering:crispEdges}#mermaid-1646778197455 .grid path{stroke-width:0}#mermaid-1646778197455 .today{fill:none;stroke:red;stroke-width:2px}#mermaid-1646778197455 .task{stroke-width:2}#mermaid-1646778197455 .taskText{text-anchor:middle;font-size:11px}#mermaid-1646778197455 .taskTextOutsideRight{fill:#000;text-anchor:start;font-size:11px}#mermaid-1646778197455 .taskTextOutsideLeft{fill:#000;text-anchor:end;font-size:11px}#mermaid-1646778197455 .taskText0,#mermaid-1646778197455 .taskText1,#mermaid-1646778197455 .taskText2,#mermaid-1646778197455 .taskText3{fill:#fff}#mermaid-1646778197455 .task0,#mermaid-1646778197455 .task1,#mermaid-1646778197455 .task2,#mermaid-1646778197455 .task3{fill:#8a90dd;stroke:#534fbc}#mermaid-1646778197455 .taskTextOutside0,#mermaid-1646778197455 .taskTextOutside1,#mermaid-1646778197455 .taskTextOutside2,#mermaid-1646778197455 .taskTextOutside3{fill:#000}#mermaid-1646778197455 .active0,#mermaid-1646778197455 .active1,#mermaid-1646778197455 .active2,#mermaid-1646778197455 .active3{fill:#bfc7ff;stroke:#534fbc}#mermaid-1646778197455 .activeText0,#mermaid-1646778197455 .activeText1,#mermaid-1646778197455 .activeText2,#mermaid-1646778197455 .activeText3{fill:#000!important}#mermaid-1646778197455 .done0,#mermaid-1646778197455 .done1,#mermaid-1646778197455 .done2,#mermaid-1646778197455 .done3{stroke:grey;fill:#d3d3d3;stroke-width:2}#mermaid-1646778197455 .doneText0,#mermaid-1646778197455 .doneText1,#mermaid-1646778197455 .doneText2,#mermaid-1646778197455 .doneText3{fill:#000!important}#mermaid-1646778197455 .crit0,#mermaid-1646778197455 .crit1,#mermaid-1646778197455 .crit2,#mermaid-1646778197455 .crit3{stroke:#f88;fill:red;stroke-width:2}#mermaid-1646778197455 .activeCrit0,#mermaid-1646778197455 .activeCrit1,#mermaid-1646778197455 .activeCrit2,#mermaid-1646778197455 .activeCrit3{stroke:#f88;fill:#bfc7ff;stroke-width:2}#mermaid-1646778197455 .doneCrit0,#mermaid-1646778197455 .doneCrit1,#mermaid-1646778197455 .doneCrit2,#mermaid-1646778197455 .doneCrit3{stroke:#f88;fill:#d3d3d3;stroke-width:2;cursor:pointer;shape-rendering:crispEdges}#mermaid-1646778197455 .activeCritText0,#mermaid-1646778197455 .activeCritText1,#mermaid-1646778197455 .activeCritText2,#mermaid-1646778197455 .activeCritText3,#mermaid-1646778197455 .doneCritText0,#mermaid-1646778197455 .doneCritText1,#mermaid-1646778197455 .doneCritText2,#mermaid-1646778197455 .doneCritText3{fill:#000!important}#mermaid-1646778197455 .titleText{text-anchor:middle;font-size:18px;fill:#000}#mermaid-1646778197455 g.classGroup text{fill:#9370db;stroke:none;font-family:trebuchet ms,verdana,arial;font-size:10px}#mermaid-1646778197455 g.classGroup rect{fill:#ececff;stroke:#9370db}#mermaid-1646778197455 g.classGroup line{stroke:#9370db;stroke-width:1}#mermaid-1646778197455 .classLabel .box{stroke:none;stroke-width:0;fill:#ececff;opacity:.5}#mermaid-1646778197455 .classLabel .label{fill:#9370db;font-size:10px}#mermaid-1646778197455 .relation{stroke:#9370db;stroke-width:1;fill:none}#mermaid-1646778197455 #compositionEnd,#mermaid-1646778197455 #compositionStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1646778197455 #aggregationEnd,#mermaid-1646778197455 #aggregationStart{fill:#ececff;stroke:#9370db;stroke-width:1}#mermaid-1646778197455 #dependencyEnd,#mermaid-1646778197455 #dependencyStart,#mermaid-1646778197455 #extensionEnd,#mermaid-1646778197455 #extensionStart{fill:#9370db;stroke:#9370db;stroke-width:1}#mermaid-1646778197455 .branch-label,#mermaid-1646778197455 .commit-id,#mermaid-1646778197455 .commit-msg{fill:#d3d3d3;color:#d3d3d3}</style><style>#mermaid-1646778197455 {
    color: rgb(0, 0, 0);
    font: normal normal 400 normal 16px / normal "Times New Roman";
  }</style><g></g><g><line id="actor0" x1="75" y1="5" x2="75" y2="220" class="actor-line" stroke-width="0.5px" stroke="#999"></line><rect x="0" y="0" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="75" y="32.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="75" dy="0">John</tspan></text></g><g><line id="actor1" x1="275" y1="5" x2="275" y2="220" class="actor-line" stroke-width="0.5px" stroke="#999"></line><rect x="200" y="0" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="275" y="32.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="275" dy="0">Alice</tspan></text></g><defs><marker id="arrowhead" refX="5" refY="2" markerWidth="6" markerHeight="4" orient="auto"><path d="M 0,0 V 4 L6,2 Z"></path></marker></defs><defs><marker id="crosshead" markerWidth="15" markerHeight="8" orient="auto" refX="16" refY="4"><path fill="black" stroke="#000000" stroke-width="1px" d="M 9,2 V 6 L16,4 Z" style="stroke-dasharray: 0, 0;"></path><path fill="none" stroke="#000000" stroke-width="1px" d="M 0,1 L 6,7 M 6,1 L 0,7" style="stroke-dasharray: 0, 0;"></path></marker></defs><g><text x="175" y="93" class="messageText" style="text-anchor: middle;">Hello John, how are you?</text><line x1="275" y1="100" x2="75" y2="100" class="messageLine0" stroke-width="2" stroke="black" marker-end="url(#arrowhead)" style="fill: none;"></line></g><g><text x="175" y="128" class="messageText" style="text-anchor: middle;">Great!</text><line x1="75" y1="135" x2="275" y2="135" class="messageLine1" stroke-width="2" stroke="black" marker-end="url(#arrowhead)" style="stroke-dasharray: 3, 3; fill: none;"></line></g><g><rect x="0" y="155" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="75" y="187.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="75" dy="0">John</tspan></text></g><g><rect x="200" y="155" fill="#eaeaea" stroke="#666" width="150" height="65" rx="3" ry="3" class="actor"></rect><text x="275" y="187.5" dominant-baseline="central" alignment-baseline="central" class="actor" style="text-anchor: middle;"><tspan x="275" dy="0">Alice</tspan></text></g></svg>
</div>]]></content><author><name></name></author><summary type="html"><![CDATA[an example of a blog post with diagrams]]></summary></entry><entry><title type="html">a distill-style blog post</title><link href="https://jiaweizzhao.github.io/blog/2021/distill/" rel="alternate" type="text/html" title="a distill-style blog post" /><published>2021-05-22T00:00:00+00:00</published><updated>2021-05-22T00:00:00+00:00</updated><id>https://jiaweizzhao.github.io/blog/2021/distill</id><content type="html" xml:base="https://jiaweizzhao.github.io/blog/2021/distill/"><![CDATA[<p><strong>NOTE:</strong>
Citations, footnotes, and code blocks do not display correctly in the dark mode since distill does not support the dark mode by default.
If you are interested in correctly adding dark mode support for distill, please open <a href="https://github.com/alshedivat/al-folio/discussions">a discussion</a> and let us know.</p>

<h2 id="equations">Equations</h2>

<p>This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine.
You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>.
If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p>

<p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph.
Here is an example:</p>

\[\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)\]

<p>Note that MathJax 3 is <a href="https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html">a major re-write of MathJax</a> that brought a significant improvement to the loading and rendering speed, which is now <a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php">on par with KaTeX</a>.</p>

<hr />

<h2 id="citations">Citations</h2>

<p>Citations are then used in the article body with the <code class="language-plaintext highlighter-rouge">&lt;d-cite&gt;</code> tag.
The key attribute is a reference to the id provided in the bibliography.
The key attribute can take multiple ids, separated by commas.</p>

<p>The citation is presented inline like this: <d-cite key="gregor2015draw"></d-cite> (a number that displays more information on hover).
If you have an appendix, a bibliography is automatically created and populated in it.</p>

<p>Distill chose a numerical inline citation style to improve readability of citation dense articles and because many of the benefits of longer citations are obviated by displaying more information on hover.
However, we consider it good style to mention author last names if you discuss something at length and it fits into the flow well — the authors are human and it’s nice for them to have the community associate them with their work.</p>

<hr />

<h2 id="footnotes">Footnotes</h2>

<p>Just wrap the text you would like to show up in a footnote in a <code class="language-plaintext highlighter-rouge">&lt;d-footnote&gt;</code> tag.
The number of the footnote will be automatically generated.<d-footnote>This will become a hoverable footnote.</d-footnote></p>

<hr />

<h2 id="code-blocks">Code Blocks</h2>

<p>Syntax highlighting is provided within <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> tags.
An example of inline code snippets: <code class="language-plaintext highlighter-rouge">&lt;d-code language="html"&gt;let x = 10;&lt;/d-code&gt;</code>.
For larger blocks of code, add a <code class="language-plaintext highlighter-rouge">block</code> attribute:</p>

<d-code block="" language="javascript">
  var x = 25;
  function(x) {
    return x * x;
  }
</d-code>

<p><strong>Note:</strong> <code class="language-plaintext highlighter-rouge">&lt;d-code&gt;</code> blocks do not look well in the dark mode.
You can always use the default code-highlight using the <code class="language-plaintext highlighter-rouge">highlight</code> liquid tag:</p>

<figure class="highlight"><pre><code class="language-javascript" data-lang="javascript"><span class="kd">var</span> <span class="nx">x</span> <span class="o">=</span> <span class="mi">25</span><span class="p">;</span>
<span class="kd">function</span><span class="p">(</span><span class="nx">x</span><span class="p">)</span> <span class="p">{</span>
  <span class="k">return</span> <span class="nx">x</span> <span class="o">*</span> <span class="nx">x</span><span class="p">;</span>
<span class="p">}</span></code></pre></figure>

<hr />

<h2 id="layouts">Layouts</h2>

<p>The main text column is referred to as the body.
It is the assumed layout of any direct descendants of the <code class="language-plaintext highlighter-rouge">d-article</code> element.</p>

<div class="fake-img l-body">
  <p>.l-body</p>
</div>

<p>For images you want to display a little larger, try <code class="language-plaintext highlighter-rouge">.l-page</code>:</p>

<div class="fake-img l-page">
  <p>.l-page</p>
</div>

<p>All of these have an outset variant if you want to poke out from the body text a little bit.
For instance:</p>

<div class="fake-img l-body-outset">
  <p>.l-body-outset</p>
</div>

<div class="fake-img l-page-outset">
  <p>.l-page-outset</p>
</div>

<p>Occasionally you’ll want to use the full browser width.
For this, use <code class="language-plaintext highlighter-rouge">.l-screen</code>.
You can also inset the element a little from the edge of the browser by using the inset variant.</p>

<div class="fake-img l-screen">
  <p>.l-screen</p>
</div>
<div class="fake-img l-screen-inset">
  <p>.l-screen-inset</p>
</div>

<p>The final layout is for marginalia, asides, and footnotes.
It does not interrupt the normal flow of <code class="language-plaintext highlighter-rouge">.l-body</code> sized text except on mobile screen sizes.</p>

<div class="fake-img l-gutter">
  <p>.l-gutter</p>
</div>

<hr />

<h2 id="other-typography">Other Typography?</h2>

<p>Emphasis, aka italics, with <em>asterisks</em> (<code class="language-plaintext highlighter-rouge">*asterisks*</code>) or <em>underscores</em> (<code class="language-plaintext highlighter-rouge">_underscores_</code>).</p>

<p>Strong emphasis, aka bold, with <strong>asterisks</strong> or <strong>underscores</strong>.</p>

<p>Combined emphasis with <strong>asterisks and <em>underscores</em></strong>.</p>

<p>Strikethrough uses two tildes. <del>Scratch this.</del></p>

<ol>
  <li>First ordered list item</li>
  <li>Another item
⋅⋅* Unordered sub-list.</li>
  <li>Actual numbers don’t matter, just that it’s a number
⋅⋅1. Ordered sub-list</li>
  <li>And another item.</li>
</ol>

<p>⋅⋅⋅You can have properly indented paragraphs within list items. Notice the blank line above, and the leading spaces (at least one, but we’ll use three here to also align the raw Markdown).</p>

<p>⋅⋅⋅To have a line break without a paragraph, you will need to use two trailing spaces.⋅⋅
⋅⋅⋅Note that this line is separate, but within the same paragraph.⋅⋅
⋅⋅⋅(This is contrary to the typical GFM line break behaviour, where trailing spaces are not required.)</p>

<ul>
  <li>Unordered list can use asterisks</li>
  <li>Or minuses</li>
  <li>Or pluses</li>
</ul>

<p><a href="https://www.google.com">I’m an inline-style link</a></p>

<p><a href="https://www.google.com" title="Google's Homepage">I’m an inline-style link with title</a></p>

<p><a href="https://www.mozilla.org">I’m a reference-style link</a></p>

<p><a href="../blob/master/LICENSE">I’m a relative reference to a repository file</a></p>

<p><a href="http://slashdot.org">You can use numbers for reference-style link definitions</a></p>

<p>Or leave it empty and use the <a href="http://www.reddit.com">link text itself</a>.</p>

<p>URLs and URLs in angle brackets will automatically get turned into links. 
http://www.example.com or <a href="http://www.example.com">http://www.example.com</a> and sometimes 
example.com (but not on Github, for example).</p>

<p>Some text to show that the reference links can follow later.</p>

<p>Here’s our logo (hover to see the title text):</p>

<p>Inline-style: 
<img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 1" /></p>

<p>Reference-style: 
<img src="https://github.com/adam-p/markdown-here/raw/master/src/common/images/icon48.png" alt="alt text" title="Logo Title Text 2" /></p>

<p>Inline <code class="language-plaintext highlighter-rouge">code</code> has <code class="language-plaintext highlighter-rouge">back-ticks around</code> it.</p>

<div class="language-javascript highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="kd">var</span> <span class="nx">s</span> <span class="o">=</span> <span class="dl">"</span><span class="s2">JavaScript syntax highlighting</span><span class="dl">"</span><span class="p">;</span>
<span class="nx">alert</span><span class="p">(</span><span class="nx">s</span><span class="p">);</span>
</code></pre></div></div>

<div class="language-python highlighter-rouge"><div class="highlight"><pre class="highlight"><code><span class="n">s</span> <span class="o">=</span> <span class="s">"Python syntax highlighting"</span>
<span class="k">print</span> <span class="n">s</span>
</code></pre></div></div>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>No language indicated, so no syntax highlighting. 
But let's throw in a &lt;b&gt;tag&lt;/b&gt;.
</code></pre></div></div>

<p>Colons can be used to align columns.</p>

<table>
  <thead>
    <tr>
      <th>Tables</th>
      <th style="text-align: center">Are</th>
      <th style="text-align: right">Cool</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td>col 3 is</td>
      <td style="text-align: center">right-aligned</td>
      <td style="text-align: right">$1600</td>
    </tr>
    <tr>
      <td>col 2 is</td>
      <td style="text-align: center">centered</td>
      <td style="text-align: right">$12</td>
    </tr>
    <tr>
      <td>zebra stripes</td>
      <td style="text-align: center">are neat</td>
      <td style="text-align: right">$1</td>
    </tr>
  </tbody>
</table>

<p>There must be at least 3 dashes separating each header cell.
The outer pipes (|) are optional, and you don’t need to make the 
raw Markdown line up prettily. You can also use inline Markdown.</p>

<table>
  <thead>
    <tr>
      <th>Markdown</th>
      <th>Less</th>
      <th>Pretty</th>
    </tr>
  </thead>
  <tbody>
    <tr>
      <td><em>Still</em></td>
      <td><code class="language-plaintext highlighter-rouge">renders</code></td>
      <td><strong>nicely</strong></td>
    </tr>
    <tr>
      <td>1</td>
      <td>2</td>
      <td>3</td>
    </tr>
  </tbody>
</table>

<blockquote>
  <p>Blockquotes are very handy in email to emulate reply text.
This line is part of the same quote.</p>
</blockquote>

<p>Quote break.</p>

<blockquote>
  <p>This is a very long line that will still be quoted properly when it wraps. Oh boy let’s keep writing to make sure this is long enough to actually wrap for everyone. Oh, you can <em>put</em> <strong>Markdown</strong> into a blockquote.</p>
</blockquote>

<p>Here’s a line for us to start with.</p>

<p>This line is separated from the one above by two newlines, so it will be a <em>separate paragraph</em>.</p>

<p>This line is also a separate paragraph, but…
This line is only separated by a single newline, so it’s a separate line in the <em>same paragraph</em>.</p>]]></content><author><name>Albert Einstein</name></author><summary type="html"><![CDATA[an example of a distill-style blog post and main elements]]></summary></entry><entry><title type="html">a post with github metadata</title><link href="https://jiaweizzhao.github.io/blog/2020/github-metadata/" rel="alternate" type="text/html" title="a post with github metadata" /><published>2020-09-28T21:01:00+00:00</published><updated>2020-09-28T21:01:00+00:00</updated><id>https://jiaweizzhao.github.io/blog/2020/github-metadata</id><content type="html" xml:base="https://jiaweizzhao.github.io/blog/2020/github-metadata/"><![CDATA[<p>A sample blog page that demonstrates the accessing of github meta data.</p>

<h2 id="what-does-github-metadata-do">What does Github-MetaData do?</h2>
<ul>
  <li>Propagates the site.github namespace with repository metadata</li>
  <li>Setting site variables :
    <ul>
      <li>site.title</li>
      <li>site.description</li>
      <li>site.url</li>
      <li>site.baseurl</li>
    </ul>
  </li>
  <li>Accessing the metadata - duh.</li>
  <li>Generating edittable links.</li>
</ul>

<h2 id="additional-reading">Additional Reading</h2>
<ul>
  <li>If you’re recieving incorrect/missing data, you may need to perform a Github API<a href="https://github.com/jekyll/github-metadata/blob/master/docs/authentication.md"> authentication</a>.</li>
  <li>Go through this <a href="https://jekyll.github.io/github-metadata/">README</a> for more details on the topic.</li>
  <li><a href="https://github.com/jekyll/github-metadata/blob/master/docs/site.github.md">This page</a> highlights all the feilds you can access with github-metadata.
<br /></li>
</ul>

<h2 id="example-metadata">Example MetaData</h2>
<ul>
  <li>Host Name :</li>
  <li>URL :</li>
  <li>BaseURL :</li>
  <li>Archived :</li>
  <li>Contributors :</li>
</ul>]]></content><author><name></name></author><category term="sample-posts" /><category term="external-services" /><summary type="html"><![CDATA[a quick run down on accessing github metadata.]]></summary></entry><entry><title type="html">a post with twitter</title><link href="https://jiaweizzhao.github.io/blog/2020/twitter/" rel="alternate" type="text/html" title="a post with twitter" /><published>2020-09-28T15:12:00+00:00</published><updated>2020-09-28T15:12:00+00:00</updated><id>https://jiaweizzhao.github.io/blog/2020/twitter</id><content type="html" xml:base="https://jiaweizzhao.github.io/blog/2020/twitter/"><![CDATA[<p>A sample blog page that demonstrates the inclusion of Tweets/Timelines/etc.</p>

<h1 id="tweet">Tweet</h1>
<p>An example of displaying a tweet:</p>
<div class="jekyll-twitter-plugin"><blockquote class="twitter-tweet"><p lang="sv" dir="ltr">jekyll-twitter-plugin (1.0.0): A Liquid tag plugin for Jekyll that renders Tweets from Twitter API <a href="http://t.co/m4EIQPM9h4">http://t.co/m4EIQPM9h4</a></p>&mdash; RubyGems (@rubygems) <a href="https://twitter.com/rubygems/status/518821243320287232?ref_src=twsrc%5Etfw">October 5, 2014</a></blockquote>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>

<h1 id="timeline">Timeline</h1>
<p>An example of pulling from a timeline:</p>
<div class="jekyll-twitter-plugin"><a class="twitter-timeline" data-width="500" data-tweet-limit="3" href="https://twitter.com/jekyllrb?ref_src=twsrc%5Etfw">Tweets by jekyllrb</a>
<script async="" src="https://platform.twitter.com/widgets.js" charset="utf-8"></script>
</div>

<h1 id="additional-details">Additional Details</h1>
<p>For more details on using the plugin visit: <a href="https://github.com/rob-murray/jekyll-twitter-plugin">jekyll-twitter-plugin</a></p>]]></content><author><name></name></author><category term="sample-posts" /><category term="external-services" /><category term="formatting" /><summary type="html"><![CDATA[an example of a blog post with twitter]]></summary></entry><entry><title type="html">a post with comments</title><link href="https://jiaweizzhao.github.io/blog/2015/comments/" rel="alternate" type="text/html" title="a post with comments" /><published>2015-10-20T15:59:00+00:00</published><updated>2015-10-20T15:59:00+00:00</updated><id>https://jiaweizzhao.github.io/blog/2015/comments</id><content type="html" xml:base="https://jiaweizzhao.github.io/blog/2015/comments/"><![CDATA[<p>This post shows how to add DISQUS comments.</p>]]></content><author><name></name></author><category term="sample-posts" /><category term="external-services" /><summary type="html"><![CDATA[an example of a blog post with comments]]></summary></entry><entry><title type="html">a post with math</title><link href="https://jiaweizzhao.github.io/blog/2015/math/" rel="alternate" type="text/html" title="a post with math" /><published>2015-10-20T15:12:00+00:00</published><updated>2015-10-20T15:12:00+00:00</updated><id>https://jiaweizzhao.github.io/blog/2015/math</id><content type="html" xml:base="https://jiaweizzhao.github.io/blog/2015/math/"><![CDATA[<p>This theme supports rendering beautiful math in inline and display modes using <a href="https://www.mathjax.org/">MathJax 3</a> engine. You just need to surround your math expression with <code class="language-plaintext highlighter-rouge">$$</code>, like <code class="language-plaintext highlighter-rouge">$$ E = mc^2 $$</code>. If you leave it inside a paragraph, it will produce an inline expression, just like \(E = mc^2\).</p>

<p>To use display mode, again surround your expression with <code class="language-plaintext highlighter-rouge">$$</code> and place it as a separate paragraph. Here is an example:</p>

\[\sum_{k=1}^\infty |\langle x, e_k \rangle|^2 \leq \|x\|^2\]

<p>You can also use <code class="language-plaintext highlighter-rouge">\begin{equation}...\end{equation}</code> instead of <code class="language-plaintext highlighter-rouge">$$</code> for display mode math.
MathJax will automatically number equations:</p>

<p>\begin{equation}
\label{eq:cauchy-schwarz}
\left( \sum_{k=1}^n a_k b_k \right)^2 \leq \left( \sum_{k=1}^n a_k^2 \right) \left( \sum_{k=1}^n b_k^2 \right)
\end{equation}</p>

<p>and by adding <code class="language-plaintext highlighter-rouge">\label{...}</code> inside the equation environment, we can now refer to the equation using <code class="language-plaintext highlighter-rouge">\eqref</code>.</p>

<p>Note that MathJax 3 is <a href="https://docs.mathjax.org/en/latest/upgrading/whats-new-3.0.html">a major re-write of MathJax</a> that brought a significant improvement to the loading and rendering speed, which is now <a href="http://www.intmath.com/cg5/katex-mathjax-comparison.php">on par with KaTeX</a>.</p>]]></content><author><name></name></author><category term="sample-posts" /><category term="formatting" /><category term="math" /><summary type="html"><![CDATA[an example of a blog post with some math]]></summary></entry><entry><title type="html">a post with code</title><link href="https://jiaweizzhao.github.io/blog/2015/code/" rel="alternate" type="text/html" title="a post with code" /><published>2015-07-15T15:09:00+00:00</published><updated>2015-07-15T15:09:00+00:00</updated><id>https://jiaweizzhao.github.io/blog/2015/code</id><content type="html" xml:base="https://jiaweizzhao.github.io/blog/2015/code/"><![CDATA[<p>This theme implements a built-in Jekyll feature, the use of Rouge, for syntax highlighting.
It supports more than 100 languages.
This example is in C++.
All you have to do is wrap your code in a liquid tag:</p>

<p>{% highlight c++ linenos %}  <br /> code code code <br /> {% endhighlight %}</p>

<p>The keyword <code class="language-plaintext highlighter-rouge">linenos</code> triggers display of line numbers.
Produces something like this:</p>

<figure class="highlight"><pre><code class="language-c--" data-lang="c++"><table class="rouge-table"><tbody><tr><td class="gutter gl"><pre class="lineno">1
2
3
4
5
6
7
8
9
10
11
12
13
14
15
16
17
</pre></td><td class="code"><pre><span class="kt">int</span> <span class="nf">main</span><span class="p">(</span><span class="kt">int</span> <span class="n">argc</span><span class="p">,</span> <span class="kt">char</span> <span class="k">const</span> <span class="err">\</span><span class="o">*</span><span class="n">argv</span><span class="p">[])</span>
<span class="p">{</span>
    <span class="n">string</span> <span class="n">myString</span><span class="p">;</span>

    <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="s">"input a string: "</span><span class="p">;</span>
    <span class="n">getline</span><span class="p">(</span><span class="n">cin</span><span class="p">,</span> <span class="n">myString</span><span class="p">);</span>
    <span class="kt">int</span> <span class="n">length</span> <span class="o">=</span> <span class="n">myString</span><span class="p">.</span><span class="n">length</span><span class="p">();</span>

    <span class="kt">char</span> <span class="n">charArray</span> <span class="o">=</span> <span class="k">new</span> <span class="kt">char</span> <span class="o">*</span> <span class="p">[</span><span class="n">length</span><span class="p">];</span>

    <span class="n">charArray</span> <span class="o">=</span> <span class="n">myString</span><span class="p">;</span>
    <span class="k">for</span><span class="p">(</span><span class="kt">int</span> <span class="n">i</span> <span class="o">=</span> <span class="mi">0</span><span class="p">;</span> <span class="n">i</span> <span class="o">&lt;</span> <span class="n">length</span><span class="p">;</span> <span class="o">++</span><span class="n">i</span><span class="p">){</span>
        <span class="n">cout</span> <span class="o">&lt;&lt;</span> <span class="n">charArray</span><span class="p">[</span><span class="n">i</span><span class="p">]</span> <span class="o">&lt;&lt;</span> <span class="s">" "</span><span class="p">;</span>
    <span class="p">}</span>

    <span class="k">return</span> <span class="mi">0</span><span class="p">;</span>
<span class="p">}</span>
</pre></td></tr></tbody></table></code></pre></figure>]]></content><author><name></name></author><category term="sample-posts" /><category term="formatting" /><category term="code" /><summary type="html"><![CDATA[an example of a blog post with some code]]></summary></entry><entry><title type="html">a post with images</title><link href="https://jiaweizzhao.github.io/blog/2015/images/" rel="alternate" type="text/html" title="a post with images" /><published>2015-05-15T21:01:00+00:00</published><updated>2015-05-15T21:01:00+00:00</updated><id>https://jiaweizzhao.github.io/blog/2015/images</id><content type="html" xml:base="https://jiaweizzhao.github.io/blog/2015/images/"><![CDATA[<p>This is an example post with image galleries.</p>

<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/9-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/9-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/9-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/9.jpg" />
  </picture>

</figure>

    </div>
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/7-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/7-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/7-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/7.jpg" />
  </picture>

</figure>

    </div>
</div>
<div class="caption">
    A simple, elegant caption looks good between image rows, after each row, or doesn't have to be there at all.
</div>

<p>Images can be made zoomable.
Simply add <code class="language-plaintext highlighter-rouge">data-zoomable</code> to <code class="language-plaintext highlighter-rouge">&lt;img&gt;</code> tags that you want to make zoomable.</p>

<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/8-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/8-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/8-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/8.jpg" data-zoomable="" />
  </picture>

</figure>

    </div>
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/10-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/10-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/10-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/10.jpg" data-zoomable="" />
  </picture>

</figure>

    </div>
</div>

<p>The rest of the images in this post are all zoomable, arranged into different mini-galleries.</p>

<div class="row mt-3">
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/11-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/11-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/11-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/11.jpg" data-zoomable="" />
  </picture>

</figure>

    </div>
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/12-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/12-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/12-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/12.jpg" data-zoomable="" />
  </picture>

</figure>

    </div>
    <div class="col-sm mt-3 mt-md-0">
        <figure>

  <picture>
    <source media="(max-width: 480px)" srcset="/assets/img/7-480.webp" />
    <source media="(max-width: 800px)" srcset="/assets/img/7-800.webp" />
    <source media="(max-width: 1400px)" srcset="/assets/img/7-1400.webp" />
    <!-- Fallback to the original file -->
    <img class="img-fluid rounded z-depth-1" src="/assets/img/7.jpg" data-zoomable="" />
  </picture>

</figure>

    </div>
</div>]]></content><author><name></name></author><category term="sample-posts" /><category term="formatting" /><category term="images" /><summary type="html"><![CDATA[this is what included images could look like]]></summary></entry></feed>